Guide to setting up the environments in this repository so they work with gpu
on linux and tensorflow.

1. Use the yml file to create a conda env that installs the latest version of
TF (2.17.0 at time of writing) and installs the right cudatoolkit and cudnn 
libraries with this automatically.
`conda env create -f perch_conda_env.yml`

2. Activate the env
conda activate perch_conda_env

3. Install curl if not already (I am using a brand new system)
sudo apt-get install curl

4. Globally install poetry, libsdnfile1 and ffmpef which are required by Perch
curl -sSL https://install.python-poetry.org | python3 -
sudo apt-get install libsndfile1 ffmpeg


6. Add path to bashrc, I forget if this is essential, but leaving for now incase.
nano ~/.bashrc
export PATH="$HOME/.local/bin:$PATH"
exit bashrc
source ~/.bashrc

7. Reactivate conda env
conda activate perch_conda_env

5. Now install the poetry env using the .tml file in the surfperch dir
cd surfperch
poetry config virtualenvs.in-project true
poetry env use $(which python)

# Install inference-only dependencies specified in the poetry configs
poetry install

BEN got to here. Poetry trying to install. Think it worked
Though it did say in red:
Cannot install prompt-toolkit.

Next check is whether it can actually find my gpu.

Omg it worked on the tf_test.py!

Still, I don't trust anything.

Will have to try the notebooks and embed.py. Feel like they could still cause issues.

Todo tomorrow:
github all this.

Try embed.

From here on:
cd /home/bwilliams/ucl_projects/marrs_acoustics/code/surfperch
poetry shell


###################
DO NOT CHANGE ABOVE NEW NOTES BELOW

Guide to setting up the environments in this repository so they work with gpu
on linux and tensorflow.

1. Use the yml file to create a conda env that installs the latest version of
TF (2.17.0 at time of writing) and installs the right cudatoolkit and cudnn 
libraries with this automatically.
cd /surfperch/setup
`conda env create -f perch_conda_env.yml`

BEN AM HERE ^
Now trying ot make a conda env with tf v.2.15.0 in the hope that will mean perch works, because in the toml file it  has this version.
If i tried installing the latest version with tensorflow[and-cuda] it would isntall 2.17. If i tried editing the .tml file to be 2.17, 
tf-io then gave issues.
There is a note in the tml that says tf-io and tf must match and to see this table:https://github.com/tensorflow/io#tensorflow-version-compatibility
but the table doesnt include tf 2.17!
Confusingly though, this is only under the jax bit, but i though i isntalled the lightwiegfht with this jax stuff, so why is it complaining.
Things to try:
1- wait to see if this conda env with tensorflow[and-cuda]==2.15.0.post1 installs and can find the gpu. This is from this blog psot:
https://blog.tensorflow.org/2023/12/tensorflow-215-update-hot-fix-linux-installation-issue.html
2- try using the latest tf version again (and maybe check if i can fix it with ensorflow[and-cuda]==2.17)

Currently got 1 to install correctly. But then when i installed poetry it still isntalled tf 2.16, wtf.
THE ISSUE = the poetry install command is in fact installing all the jx bs, so change poetry install command to not?
to do:
- try fixign the install command
- what if just move all the tml stuff into the conda env creation and skip poetry?
- WRONG, it is not isntalling all the jax bs i dont think


latest
- tried installing all from a conda env. found loads of conflicts but removed:
jax, flax, clu, chex, optax, scann
Which I don't think are needed for lightweight inference? Worried about scann though
- Tested gpu and tf which worked
- now need to see if embedding will work!
- side note, if this doesnt work and im back to installing tf and cuda separately, i now know these versions install and work with 
tfv2.15 as I did conda list and it showed all the packages
cudatoolkit               11.8.0               h6a678d5_0  
cudnn                     8.9.2.26               cuda11_0 
- nope, couldnt run any scripts as turned ou it does still need jax and those other libsdnfile1

Where im up to:
- cant get conda yml to install with everything as with tf2.16 it cant find gpu and with tf.2.15 it wont install with jax etc
- cant just make a conda env with tf 2.15 then run poetry shell as poetry overwrite the tf version
- solution: if i can get tf 2.16 conda env to work then it may find my gpu after poetry install?
OR: if i can global install the right cuda and cudnn, though i dont like this because its global and anyway it didnt seem to work with ubuntu 22.4
OR: install perch at head in colab. print versions of everything installed in that env
TRYING: solution here?: https://github.com/tensorflow/tensorflow/issues/63362#issuecomment-2016019354
    One suggestion it might work with python 3.11. So am first checking I can in fact install with tf 2.16.0 cause think i got this working
    earlier. Then will try change the yml to python 3.11 and try again. If not follow that link for more.
    1: installing with the standard perch stuff but in cona with python 3.10 and tf 2.16.1[and-cuda] = installs, tf_test = works??
    But, the embed.py doesnt run as no etils. I think because it got it form conda forge not pip?
    I then couldnbt get etils to install from the yml, but did run this which worked:
    conda install -c conda-forge etils
    However, now getting an error from etils that:
    ModuleNotFoundError: No module named 'importlib_resources'
    trying to nuke env then reintall etils of earlier version.
    ok now did 
    pip install importlib_resources
    and now:
    pip install ml_collections
    pip install tqdm
    pip install apache_beam
    audioread
    FOUND - I was installing the wrony yml doh, so the notes above are kinda irrelevant
    2: Back to checking if tf 2.16.1 installs ok, as poetry tml will like this and then can try the forum stuff to get 2.16.1 working on gpu
    - Yes env installs with tf 2.16.1 but no gpu found
    - Then ran the commands which got tf test working:
    export NVIDIA_DIR=$(dirname $(dirname $(python -c "import nvidia.cudnn;print(nvidia.cudnn.__file__)")))
    export LD_LIBRARY_PATH=$(echo ${NVIDIA_DIR}/*/lib/ | sed -r 's/\s+/:/g')${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
    - Then tried poetry install after i'd removed tf, but it didnt work. now running lock which might take ages. If this fails, I could just
    keep tf in the tml file but maybe set the exact version to 2.16.1?
    think it worked!! to do:
    - check i can embed
    - make permanant edit to tml, upload to github
    - write a basic readme with the above instructions
    - - save blog link + command, add to try things
    -- interestingly poetry install modifies the conda env and adds the chipr package and other things? unexpected but useful
    -- also note, the conda yaml installs tf 2.16.1. After poetry install, for some reason this upgrades to tf2.16.2.
    - reproduce in a new env
    - find out how ot get notebooks working
    - clean up yml files

  
    - now want to try 2.15.1 again but remove tf rom the poetry tml and perhaps change the io or whatever it is to match 2.15 by using that table?











2. Activate the env and test the gpu works. It should show TF v2.17.0 and 'Num 
GPUs Available: 1'.
conda activate perch_conda_env
python tf_test.py

3. Install curl if not already (I am using a brand new system)
sudo apt-get install curl

4. Globally install poetry, libsdnfile1 and ffmpef which are required by Perch
curl -sSL https://install.python-poetry.org | python3 -
sudo apt-get install libsndfile1 ffmpeg


6. Add path to bashrc, I forget if this is essential, but leaving for now incase.
nano ~/.bashrc
export PATH="$HOME/.local/bin:$PATH"
exit bashrc
source ~/.bashrc

7. Reactivate conda env
conda activate perch_conda_env

5. Now install the poetry env using the .tml file in the surfperch dir. Note this 
has one modification to the standard Perch repo in the .tml file to set the TF 
version to 2.17.0 which is what was installed for our conda env.

5a. 
poetry config virtualenvs.in-project true
poetry env use $(which python)


# Install inference-only dependencies specified in the poetry configs
poetry lock --no-update
poetry install

BEN got to here. Poetry trying to install. Think it worked
Though it did say in red:
Cannot install prompt-toolkit.

Next check is whether it can actually find my gpu.

Omg it worked on the tf_test.py!

Still, I don't trust anything.

Will have to try the notebooks and embed.py. Feel like they could still cause issues.

Todo tomorrow:
github all this.

Try embed.

From here on:
cd /home/bwilliams/ucl_projects/marrs_acoustics/code/surfperch
poetry shell


